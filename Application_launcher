#!/usr/bin/python
import Tkinter
import os
#from Tkinter import PhotoImage
root = Tkinter.Tk()
#root.geometry("1675x140")
root.title("Application Launcher : UB007")
#top.overrideredirect(True)
from Tkinter import *
#root = Tk()
root.geometry('{}x{}'.format(1390, 250))

#################################

# create all of the main containers
top_frame = Frame(root, bg='cyan', width=450, height=50, pady=3)
#center = Frame(top, bg='gray2', width=50, height=40, padx=3, pady=3)

# layout all of the main containers
root.grid_rowconfigure(1, weight=1)
root.grid_columnconfigure(0, weight=1)

top_frame.grid(row=0, sticky="ew")
#center.grid(row=1, sticky="nsew")

# create the widgets for the top frame
model_label = Label(top_frame, text='Model Dimensions')
width_label = Label(top_frame, text='Width:')
#COLOR = "black"
#:wq!root.config(highlightbackground=COLOR)
##### variable ###############

photo1 = PhotoImage(file="bomgar75.png")
photo2 = PhotoImage(file="spark75.png")
photo3 = PhotoImage(file="Firefox3.png")
photo4 = PhotoImage(file="Terminal3.png")
#photo5 = PhotoImage(file="exit128.png")
photo6 = PhotoImage(file="filemng3.png")
photo7 = PhotoImage(file="jmeter.png")
photo8 = PhotoImage(file="eclipse.png")
photo9 = PhotoImage(file="word3.png")
photo10 = PhotoImage(file="Presentation3.png")
photo11 = PhotoImage(file="Excel3.png")
photo12 = PhotoImage(file="notepad.png")
photo13 = PhotoImage(file="chrome.png")
photo14 = PhotoImage(file="dbever.png")
photo15 = PhotoImage(file="shutter.png")
photo16 = PhotoImage(file="calendar.png")
photo17 = PhotoImage(file="clock.png")
photo18 = PhotoImage(file="merge.png")
photo19 = PhotoImage(file="Lock3.png")
photo20 = PhotoImage(file="monitor3.png")
photo21 = PhotoImage(file="calculator3.png")

# define functions

def firefox_test():
#    os.system("firefox &")
    os.system("/opt/firefox/firefox &")

def chrome_test():
    os.system("google-chrome &")

def terminal_test():
    os.system("gnome-terminal --working-directory=~")

def spark_test():
    os.system("/usr/share/spark/bin/spark &")

#def close_window():
#    top.destroy()

def bomgar_test():
    os.system("/home/user/.bomgar-acc/bomgar.figmd.com/bomgar-acc &")

def jmeter_test():
    os.system("/opt/apache-jmeter-4.0/bin/jmeter &")

def eclipseoxygen_test():
    os.system("/opt/eclipse/eclipse &")

def wpsword_test():
    os.system("wps -style gtk+ &")

def wpspresantation_test():
    os.system("wpp -style gtk+ &")

def wpsexcel_test():
    os.system("et -style gtk+ &")

def filemanager_test():
    os.system("nautilus &")

def notepadqq_test():
    os.system("notepadqq &")

def dbever_test():
    os.system("/usr/share/dbeaver/dbeaver &")

def shutter_test():
    os.system("shutter &")

def gnomecalander_test():
    os.system("gnome-calendar &")

def xclock_test():
    os.system("xclock &")

def diffuse_test():
    os.system("diffuse &")
	
def lock_test():
    os.system("gnome-screensaver-command -l &")

def sys_monitor_test():
    os.system("gnome-system-monitor &")

def calc_test():
    os.system("xcalc &")


##########################

##### -------------------------------------------------------
try:
    # for Python2
    import Tkinter as tk
except ImportError:
    # for Python3
    import tkinter as tk

class CreateToolTip(object):
    """
    create a tooltip for a given widget
    """
    def __init__(self, widget, text='widget info'):
        self.waittime = 500     #miliseconds
        self.wraplength = 180   #pixels
        self.widget = widget
        self.text = text
        self.widget.bind("<Enter>", self.enter)
        self.widget.bind("<Leave>", self.leave)
        self.widget.bind("<ButtonPress>", self.leave)
        self.id = None
        self.tw = None

    def enter(self, event=None):
        self.schedule()

    def leave(self, event=None):
        self.unschedule()
        self.hidetip()

    def schedule(self):
        self.unschedule()
        self.id = self.widget.after(self.waittime, self.showtip)

    def unschedule(self):
        id = self.id
        self.id = None
        if id:
            self.widget.after_cancel(id)

    def showtip(self, event=None):
        x = y = 0
        x, y, cx, cy = self.widget.bbox("insert")
        x += self.widget.winfo_rootx() + 25
        y += self.widget.winfo_rooty() + 20
        # creates a toplevel window
        self.tw = tk.Toplevel(self.widget)
        # Leaves only the label and removes the app window
        self.tw.wm_overrideredirect(True)
        self.tw.wm_geometry("+%d+%d" % (x, y))
        label = tk.Label(self.tw, text=self.text, justify='left',
                       background="#ffffff", relief='solid', borderwidth=1,
                       wraplength = self.wraplength)
        label.pack(ipadx=1)

    def hidetip(self):
        tw = self.tw
        self.tw= None
        if tw:
            tw.destroy()
# testing ...

#if __name__ == '__main__':
#    root = tk.Tk()
### ------------------------------------------------------------------------------

	


frame1 = Tkinter.Button(top_frame, image =photo3, command = firefox_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Mozilla Firefox")

frame2 = Tkinter.Button(top_frame, image =photo4, command = terminal_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Terminal")

frame3 = Tkinter.Button(top_frame, image =photo2, command = spark_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Spark")

frame4 = Tkinter.Button(top_frame, image =photo1, command = bomgar_test,highlightbackground="black", highlightthickness=1,  height=100, width=110, compound="top", text="Bomgar") 

frame5 = Tkinter.Button(top_frame, image =photo7, command = jmeter_test,highlightbackground="black", highlightthickness=1,  height=100, width=110, compound="top", text="JMeter")

frame6 = Tkinter.Button(top_frame, image =photo6, command = filemanager_test,highlightbackground="black", highlightthickness=1,  height=100, width=110, compound="top", text="File Manager")

frame7 = Tkinter.Button(top_frame, image =photo8, command = eclipseoxygen_test,highlightbackground="black", highlightthickness=1,  height=100, width=110, compound="top", text="eClipse")

frame8 = Tkinter.Button(top_frame, image =photo9, command = wpsword_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="WPS Word")

frame9 = Tkinter.Button(top_frame, image =photo10, command = wpspresantation_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="WPS Presentation")

frame10 = Tkinter.Button(top_frame, image =photo11, command = wpsexcel_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="WPS Excel")

frame11 = Tkinter.Button(top_frame, image =photo12, command = notepadqq_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Notepad ++")

frame12 = Tkinter.Button(top_frame, image =photo13, command = chrome_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Chrome")

frame13 = Tkinter.Button(top_frame, image =photo14, command = dbever_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="DBeaver")

frame14 = Tkinter.Button(top_frame, image =photo15, command = shutter_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Shutter")

frame15 = Tkinter.Button(top_frame, image =photo16, command = gnomecalander_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Calendar")

frame16 = Tkinter.Button(top_frame, image =photo17, command = xclock_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Clock")

frame17 = Tkinter.Button(top_frame, image =photo18, command = diffuse_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Diffuse")

frame18 = Tkinter.Button(top_frame, image =photo19, command = lock_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Lock")

frame19 = Tkinter.Button(top_frame, image =photo20, command = sys_monitor_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="system-monitor")

frame20 = Tkinter.Button(top_frame, image =photo21, command = calc_test, highlightbackground="black", highlightthickness=1, height=100, width=110, compound="top", text="Calculator")
##############################

frame1_ttp = CreateToolTip(frame1, "Mozilla Firefox - Web Browser ") 
frame2_ttp = CreateToolTip(frame2, "Terminal - command line interface")
frame3_ttp = CreateToolTip(frame3, "Spark - Instant Messenger")
frame4_ttp = CreateToolTip(frame4, "Secure remote access to any remote desktop or server")
frame5_ttp = CreateToolTip(frame5, "Apache JMeter to perform basic load and stress testing on your web application environment.")
frame6_ttp = CreateToolTip(frame6, "interface to manage files and folders")
frame7_ttp = CreateToolTip(frame7, "Eclipse Java EE IDE for Web Developers")
frame8_ttp = CreateToolTip(frame8, "similar to the Microsoft Word document writer")
frame9_ttp = CreateToolTip(frame9, "similar to the Microsoft PowerPoint")
frame10_ttp = CreateToolTip(frame10, "similar to the Microsoft Excel")
frame11_ttp = CreateToolTip(frame11, "Notepad++ editor")
frame12_ttp = CreateToolTip(frame12, "Chrome - Web Browser")
frame13_ttp = CreateToolTip(frame13, "DBeaver is an SQL client and a database administration tool. For relational databases it uses JDBC API to interact with databases via a JDBC driver. ")
frame14_ttp = CreateToolTip(frame14, "You can take a screenshot of a specific area, window, your whole screen, or even of a website.")
frame15_ttp = CreateToolTip(frame15, "showing the days, weeks, and months of a particular year, or giving particular seasonal information.")
frame16_ttp = CreateToolTip(frame16, "indicate time")
frame17_ttp = CreateToolTip(frame17, "Diffuse is a graphical tool for merging and comparing text files. ")
frame19_ttp = CreateToolTip(frame19, "The GNOME System Monitor displays basic system information and allows you to monitor system processes, and resource or file system usage. ")
frame18_ttp = CreateToolTip(frame18, "Lock the Display.")
frame20_ttp = CreateToolTip(frame20, "Mathematical Calculations.")


###############################


# layout the widgets in the top frame
frame1.grid(row=0, column=0)
frame2.grid(row=0, column=1)
frame3.grid(row=0, column=2)
frame4.grid(row=0, column=3)
frame5.grid(row=0, column=4)
frame6.grid(row=0, column=5)
frame7.grid(row=0, column=6)
frame8.grid(row=0, column=7)
frame9.grid(row=0, column=8)
frame10.grid(row=0, column=9)
frame11.grid(row=1, column=0)
frame12.grid(row=1, column=1)
frame13.grid(row=1, column=2)
frame14.grid(row=1, column=3)
frame15.grid(row=1, column=4)
frame16.grid(row=1, column=5)
frame17.grid(row=1, column=6)
frame18.grid(row=1, column=9)
frame19.grid(row=1, column=7)
frame20.grid(row=1, column=8)
#frame21.grid(row=1, column=0)


root.mainloop()
